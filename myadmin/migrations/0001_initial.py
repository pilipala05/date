# Generated by Django 4.0.3 on 2022-03-26 14:15

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('picture', models.CharField(max_length=255)),
                ('main', models.CharField(blank=True, max_length=255, null=True)),
                ('message', models.TextField()),
                ('title', models.CharField(max_length=255)),
                ('title_id', models.CharField(max_length=255)),
                ('status', models.IntegerField(default=1)),
                ('publish_at', models.DateTimeField(default=datetime.datetime.now)),
                ('up_num', models.IntegerField(default=0)),
                ('down_num', models.IntegerField(default=0)),
            ],
            options={
                'db_table': 'article',
            },
        ),
        migrations.CreateModel(
            name='Blog',
            fields=[
                ('nid', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=64)),
                ('site_name', models.CharField(max_length=32)),
                ('theme', models.CharField(max_length=64)),
            ],
            options={
                'db_table': 'blog',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=50)),
                ('nickname', models.CharField(max_length=50)),
                ('password_hash', models.CharField(max_length=100)),
                ('password_salt', models.CharField(max_length=50)),
                ('status', models.IntegerField(default=1)),
                ('create_at', models.DateTimeField(default=datetime.datetime.now)),
                ('update_at', models.DateTimeField(default=datetime.datetime.now)),
            ],
            options={
                'db_table': 'user',
            },
        ),
        migrations.CreateModel(
            name='Webuser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nickname', models.CharField(max_length=50)),
                ('head', models.CharField(max_length=255)),
                ('mobile', models.CharField(max_length=50)),
                ('password', models.CharField(blank=True, max_length=50, null=True)),
                ('email', models.CharField(max_length=50)),
                ('status', models.IntegerField(default=1)),
                ('create_at', models.DateTimeField(default=datetime.datetime.now)),
                ('update_at', models.DateTimeField(default=datetime.datetime.now)),
                ('blog', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='myadmin.blog')),
            ],
            options={
                'db_table': 'webuser',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('nid', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=64)),
                ('blog', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='myadmin.blog')),
            ],
            options={
                'db_table': 'tag',
            },
        ),
        migrations.CreateModel(
            name='Commit',
            fields=[
                ('nid', models.AutoField(primary_key=True, serialize=False)),
                ('content', models.CharField(max_length=255)),
                ('publish_at', models.DateTimeField(default=datetime.datetime.now)),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myadmin.article')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='myadmin.commit')),
                ('webuser', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myadmin.webuser')),
            ],
            options={
                'db_table': 'commit',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('nid', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=64)),
                ('blog', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='myadmin.blog')),
            ],
            options={
                'db_table': 'category',
            },
        ),
        migrations.CreateModel(
            name='ArticleTOTag',
            fields=[
                ('nid', models.AutoField(primary_key=True, serialize=False)),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myadmin.article')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myadmin.tag')),
            ],
        ),
        migrations.AddField(
            model_name='article',
            name='blog',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='myadmin.blog'),
        ),
        migrations.AddField(
            model_name='article',
            name='category',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='myadmin.category'),
        ),
        migrations.AddField(
            model_name='article',
            name='tag',
            field=models.ManyToManyField(through='myadmin.ArticleTOTag', to='myadmin.tag'),
        ),
        migrations.CreateModel(
            name='UpAndDown',
            fields=[
                ('nid', models.AutoField(primary_key=True, serialize=False)),
                ('up_down', models.BooleanField()),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myadmin.article')),
                ('webuser', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myadmin.webuser')),
            ],
            options={
                'unique_together': {('webuser', 'article')},
            },
        ),
    ]
